// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        String     @id @default(uuid())
  email     String     @unique
  password  String
  role      role       @default(USER)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Booking   booking[]
  CartItem  cartItem[]
}

enum role {
  USER
  ADMIN
}

model room {
  id          String     @id @default(uuid())
  number      String     @unique
  type        String
  price       Float
  capacity    Int
  isAvailable Boolean    @default(true)
  amenities   String[]
  Booking     booking[]
  CartItem    cartItem[]
}

model booking {
  id         String        @id @default(uuid())
  checkIn    DateTime
  checkOut   DateTime
  totalPrice Float
  createdAt  DateTime      @default(now())
  expiresAt  DateTime
  status     bookingStatus @default(PENDING)
  userId     String
  user       user          @relation(fields: [userId], references: [id])
  roomId     String
  room       room          @relation(fields: [roomId], references: [id])
  Payment    payment?
}

enum bookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

model payment {
  id        String        @id @default(uuid())
  amount    Float
  method    String
  status    paymentStatus @default(PENDING)
  stripeId  String?       @unique
  bookingId String        @unique
  booking   booking       @relation(fields: [bookingId], references: [id])
  createdAt DateTime      @default(now())
}

enum paymentStatus {
  PENDING
  COMPLETED
  FAILED
}

model cartItem {
  id        String   @id @default(uuid())
  checkIn   DateTime
  checkOut  DateTime
  adults    Int
  children  Int
  services  String? // JSON ფორმატით შენახული სერვისების ID-ების მასივი
  createdAt DateTime @default(now())

  userId String
  user   user   @relation(fields: [userId], references: [id])
  roomId String
  room   room   @relation(fields: [roomId], references: [id])
}

model service{
  id String @id @default(uuid())
  name String
  descirpiton String
  price Float
} 